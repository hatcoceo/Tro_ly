from datetime import datetime
from lunarcalendar import Converter, Solar


class TodayCommandHandler:
    def __init__(self):
        self.vn_weekdays = [
            "Th·ª© Hai", "Th·ª© Ba", "Th·ª© T∆∞", "Th·ª© NƒÉm",
            "Th·ª© S√°u", "Th·ª© B·∫£y", "Ch·ªß Nh·∫≠t"
        ]
        # C√°c t·ª´ kh√≥a ng∆∞·ªùi d√πng c√≥ th·ªÉ h·ªèi
        self.keywords = [
            "h√¥m nay l√† th·ª©",
            "h√¥m nay th·ª© m·∫•y",
            "h√¥m nay l√† th·ª© m·∫•y",
            "nay l√† th·ª©",
            "nay th·ª© m·∫•y",
            "ng√†y √¢m l√† m·∫•y",
            "ng√†y √¢m h√¥m nay",
        ]

    def can_handle(self, command: str) -> bool:
        """Ki·ªÉm tra xem l·ªánh c√≥ thu·ªôc plugin n√†y kh√¥ng"""
        return any(kw in command for kw in self.keywords)

    def handle(self, command: str) -> str:
        """X·ª≠ l√Ω v√† tr·∫£ v·ªÅ ng√†y d∆∞∆°ng & √¢m l·ªãch"""
        now = datetime.now()
        weekday = self.vn_weekdays[now.weekday()]
        solar_date = now.strftime("%d/%m/%Y")

        solar = Solar(now.year, now.month, now.day)
        lunar = Converter.Solar2Lunar(solar)
        lunar_date = f"{lunar.day}/{lunar.month}/{lunar.year}"

        response = (
            f"üìÖ {weekday}, ng√†y {solar_date} (D∆∞∆°ng l·ªãch)\n"
            f"üåô {lunar_date} (√Çm l·ªãch)"
        )
        return response


plugin_info = {
    "enabled": True,
    "register": lambda assistant: assistant.handlers.append(TodayCommandHandler()),
    "command_handle": [
        "h√¥m nay l√† th·ª©",
        "h√¥m nay th·ª© m·∫•y",
        "h√¥m nay l√† th·ª© m·∫•y",
        "nay l√† th·ª©",
        "nay th·ª© m·∫•y",
        "ng√†y √¢m l√† m·∫•y",
        "ng√†y √¢m h√¥m nay",
    ],
}